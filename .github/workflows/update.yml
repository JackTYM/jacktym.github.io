name: Update Repo Stats

on:
  schedule:
    - cron: '0 */12 * * *'
  workflow_dispatch:

jobs:
  update-stats:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install requests
        run: pip install requests

      - name: Update stats
        env:
          GH_TOKEN: ${{ secrets.MY_PAT }}
          GH_USER: ${{ github.repository_owner }}
        run: |
          python3 - <<EOF
          import json
          import requests
          import os

          headers = {
              "Authorization": f"token {os.getenv('GH_TOKEN')}",
              "Accept": "application/vnd.github.v3+json"
          }

          user = os.getenv('GH_USER')

          with open('projects.json', 'r') as f:
              projects = json.load(f)

          updated_projects = []
          for project in projects:
              if project.get("visibility") != "Public":
                  updated_projects.append(project)
                  continue

              repo_name = project["name"]
              repo_url = f"https://api.github.com/repos/{user}/{repo_name}"
              clones_url = f"{repo_url}/traffic/clones"
              views_url = f"{repo_url}/traffic/views"

              repo_resp = requests.get(repo_url, headers=headers).json()
              clones_resp = requests.get(clones_url, headers=headers).json()
              views_resp = requests.get(views_url, headers=headers).json()

              project["stars"] = repo_resp.get("stargazers_count", 0)
              project["clones_last_14_days"] = clones_resp.get("count", 0)
              project["clones_unique"] = clones_resp.get("uniques", 0)
              project["visitors_last_14_days"] = views_resp.get("count", 0)
              project["visitors_unique"] = views_resp.get("uniques", 0)

              updated_projects.append(project)

          with open('projects.json', 'w') as f:
              json.dump(updated_projects, f, indent=2)
          EOF

      - name: Commit and push updates
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add projects.json
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update public project stats"
            git push
